name: CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop, feature/add_simple_dirac_3dvar]
  workflow_dispatch:
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: twsearle/orca-jedi/ci-almalinux9:v1.4.0
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: checkout jedicmake
        uses: actions/checkout@v3
        with:
          path: ci/jedicmake
          repository: JCSDA-internal/jedi-cmake
          submodules: true
          token: ${{ secrets.GHCR_PAT }}

      - name: checkout oops
        uses: actions/checkout@v3
        with:
          path: ci/oops
          repository: JCSDA-internal/oops
          token: ${{ secrets.GHCR_PAT }}

      - name: checkout vader
        uses: actions/checkout@v3
        with:
          path: ci/vader
          repository: JCSDA-internal/vader
          token: ${{ secrets.GHCR_PAT }}

      - name: checkout saber
        uses: actions/checkout@v3
        with:
          path: ci/saber
          repository: JCSDA-internal/saber
          token: ${{ secrets.GHCR_PAT }}

      - name: checkout ioda
        uses: actions/checkout@v3
        with:
          path: ci/ioda
          repository: JCSDA-internal/ioda
          token: ${{ secrets.GHCR_PAT }}

      - name: checkout ufo
        uses: actions/checkout@v3
        with:
          path: ci/ufo
          repository: JCSDA-internal/ufo
          token: ${{ secrets.GHCR_PAT }}

      - name: checkout atlas-data
        uses: actions/checkout@v3
        with:
          path: ci/atlas-data
          repository: MetOffice/atlas-data
          lfs: true
          token: ${{ secrets.GHCR_PAT }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: twsearle
          password: ${{ secrets.GHCR_PAT }}

      - name: Pull Docker image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and test
        run: |
          docker run --rm \
            --entrypoint=/usr/local/src/orca-jedi/ci/build-and-test.sh \
            --workdir=/usr/local/src/orca-jedi/ci \
            --volume $PWD:/usr/local/src/orca-jedi \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
